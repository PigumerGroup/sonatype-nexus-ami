service: sonatype-nexus-infra

provider: aws

resources:
  Resources:
    Vpc:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: '192.168.0.0/24'
        EnableDnsHostnames: true
        EnableDnsSupport: true
        Tags:
          - Key: Name
            Value: Nexus
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: Nexus
    InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref Vpc
    RouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        Tags:
          - Key: Name
            Value: Nexus
        VpcId: !Ref Vpc
    Route:
      Type: AWS::EC2::Route
      Properties:
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref InternetGateway
        RouteTableId: !Ref RouteTable
    Subnet1:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone:
          Fn::Select:
            - 0
            - Fn::GetAZs: ''
        CidrBlock: '192.168.0.0/26'
        Tags:
          - Key: Name
            Value: Nexus
        VpcId: !Ref Vpc
    Subnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref Subnet1
    Subnet2:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone:
          Fn::Select:
            - 1
            - Fn::GetAZs: ''
        CidrBlock: '192.168.0.64/26'
        Tags:
          - Key: Name
            Value: Nexus
        VpcId: !Ref Vpc
    Subnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref Subnet2
    EC2Role:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "ec2.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
          - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        Path: /
        Policies:
          - PolicyName: "root"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "ec2:*"
                    - "elasticfilesystem:*"
                    - "kms:*"
                  Resource: "*"
        RoleName: sonatype-nexus-role
    InstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        InstanceProfileName: Nexus
        Path: /
        Roles:
          - !Ref EC2Role
    SSHSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Sonatype Nexus
        GroupName: sonatype-nexus-securitygroup-for-ssh
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            FromPort: 22
            IpProtocol: tcp
            ToPort: 22
        Tags:
          - Key: Name
            Value: Nexus
        VpcId: !Ref Vpc
    LaunchConfiguration:
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        AssociatePublicIpAddress: true
        IamInstanceProfile: !Ref InstanceProfile
        ImageId: ${opt:imageId}
        InstanceType: t2.small
        SecurityGroups:
          - Fn::GetAtt:
            - Vpc
            - DefaultSecurityGroup
          - !Ref SSHSecurityGroup
    TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckEnabled: true
        HealthCheckIntervalSeconds: 30
        HealthCheckPath: /
        HealthCheckPort: 8081
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 5
        Matcher:
          HttpCode: 200
        Name: sonatype-nexus
        Port: 8081
        Protocol: HTTP
        Tags:
          - Key: Name
            Value: Nexus
        TargetType: instance
        UnhealthyThresholdCount: 2
        VpcId: !Ref Vpc
    AutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        AutoScalingGroupName: sonatype-nexus
        DesiredCapacity: 0
        HealthCheckType: EC2
        LaunchConfigurationName: !Ref LaunchConfiguration
        MaxSize: 1
        MinSize: 0
        Tags:
          - Key: Name
            PropagateAtLaunch: true
            Value: Nexus
        TargetGroupARNs:
          - !Ref TargetGroup
        VPCZoneIdentifier:
          - !Ref Subnet1
          - !Ref Subnet2
    LBSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Sonatype Nexus
        GroupName: sonatype-nexus-securitygroup-for-lb
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            FromPort: 443
            IpProtocol: tcp
            ToPort: 443
        Tags:
          - Key: Name
            Value: Nexus
        VpcId: !Ref Vpc
    LoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        IpAddressType: ipv4
        Name: sonatype-nexus-loadbalancer
        Scheme: internet-facing
        SecurityGroups:
          - Fn::GetAtt:
              - Vpc
              - DefaultSecurityGroup
          - !Ref LBSecurityGroup
        Subnets:
          - !Ref Subnet1
          - !Ref Subnet2
        Tags:
          - Key: Name
            Value: Nexus
        Type: application
  Outputs:
    VpcId:
      Value: !Ref Vpc
      Export:
        Name: sonatype-nexus-vpc
    Subnet1Id:
      Value: !Ref Subnet1
      Export:
        Name: sonatype-nexus-subnet1
    Subnet2Id:
      Value: !Ref Subnet2
      Export:
        Name: sonatype-nexus-subnet2
    InstanceProfile:
      Value:
        Fn::GetAtt:
          - InstanceProfile
          - Arn
    SecurityGroup:
      Value:
        Fn::GetAtt:
          - Vpc
          - DefaultSecurityGroup
      Export:
        Name: sonatype-nexus-securitygroup
    TargetGroup:
      Value: !Ref TargetGroup
      Export:
        Name: sonatype-nexus-targetgroup
    LoadBalancer:
      Value: !Ref LoadBalancer
      Export:
        Name: sonatype-nexus-loadbalancer
    LoadBalancerHostedZoneID:
      Value:
        Fn::GetAtt:
          - LoadBalancer
          - CanonicalHostedZoneID
      Export:
        Name: sonatype-nexus-loadbalancer-hostedzoneid
